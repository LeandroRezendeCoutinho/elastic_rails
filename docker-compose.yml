version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: ./docker/backend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - default
      - elastic
    volumes:
      - .:/app
    command: ["bin/rails", "s", "-p", "3000", "-b", "0.0.0.0"]
  
  postgres:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_DB=elastic_rails_development
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - default
    volumes:
      - postgres-data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: ${ELASTIC_CONTAINER_NAME}
    environment:
      - node.name=elastic-node
      - cluster.name=elastic-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    networks:
      - elastic
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: ${KIBANA_CONTAINER_NAME}
    environment:
      - node.name=kibana-node
      - cluster.name=elastic-cluster
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elastic

networks:
  default:
  elastic:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  elasticsearch-data:
    driver: local
  